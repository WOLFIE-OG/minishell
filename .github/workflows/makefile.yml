name: Makefile CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    env:
      VALGRIND_CMD: valgrind --leak-check=full --track-fds=yes --trace-children=yes --track-origins=yes --suppressions=rl.supp

    steps:
    - uses: actions/checkout@main

    - name: Get submodules
      run: git submodule update --init --recursive

    - name: Update apt
      run: sudo apt-get update --fix-missing
    
    - name: Install tree, valgrind, lolcat, libbsd & neofetch
      run: sudo apt-get install tree valgrind lolcat libbsd-dev neofetch -y

    - name: Run tree
      run: tree

    - name: Make minishell
      run: make

    - name: Re-make minishell
      run: make re

    - name: View contents of libft
      run: nm -C libft/build/libft.a

    - name: View contents of minishell
      run: nm -C minishell
    
    - name: Run non-interactive mode | test 1
      run: ./minishell -c 'ifconfig > file.txt' && ./minishell -c 'ifconfig | hexdump >> file.txt' && ./minishell -c 'echo $PATH >> file.txt' && ./minishell -c 'lolcat < file.txt' && ./minishell -c 'rm file.txt'

    - name: Run non-interactive mode with valgrind | test 1
      run: $VALGRIND_CMD ./minishell -c 'ifconfig > file.txt' && $VALGRIND_CMD ./minishell -c 'ifconfig | hexdump >> file.txt' && $VALGRIND_CMD ./minishell -c 'echo $PATH >> file.txt' && $VALGRIND_CMD ./minishell -c 'lolcat < file.txt' && $VALGRIND_CMD ./minishell -c 'rm file.txt'
  
    - name: Run non-interactive mode | test 2
      run: ./minishell -c '> file.txt ifconfig' && ./minishell -c '>> file.txt neofetch' && ./minishell -c 'cat < file.txt | hexdump' && ./minishell -c '< file.txt cat'
    
    - name: Run non-interactive mode with valgrind | test 2
      run: $VALGRIND_CMD ./minishell -c '> file.txt ifconfig' && $VALGRIND_CMD ./minishell -c '>> file.txt neofetch' && $VALGRIND_CMD ./minishell -c 'cat < file.txt | hexdump' && $VALGRIND_CMD ./minishell -c '< file.txt cat'
    
    - name: Run non-interactive mode | test 3 diff | minishell
      run: ./minishell -c 'cat /etc/os-release > minishell.txt' && ./minishell -c 'uname | hexdump >> minishell.txt' && ./minishell -c 'echo $PATH >> minishell.txt'
    
    - name: Run non-interactive mode | test 3 diff | bash
      run: bash -c 'cat /etc/os-release > bash.txt' && bash -c 'uname | hexdump >> bash.txt' && bash -c 'echo $PATH >> bash.txt'
    
    - name: Run non-interactive mode | test 3 diff | diff
      run: diff minishell.txt bash.txt -y -s
      
    - name: Compile segfault program
      run: gcc intentional_segfault.c -o segfault.bin

    - name: Run non-interactive mode | test 4 segfault program | minishell
      run: ./minishell -c './segfault.bin'
      continue-on-error: true
    
    - name: Run non-interactive mode | test 4 segfault program | bash
      run: bash -c './segfault.bin'
      continue-on-error: true

    - name: Run non-interactive mode with valgrind | test 4 segfault program | minishell
      run: $VALGRIND_CMD ./minishell -c './segfault.bin'
      continue-on-error: true
    
    - name: Run mpanic tester
      run: touch .timmer && bash mpanic.sh
      working-directory: mpanic
    
